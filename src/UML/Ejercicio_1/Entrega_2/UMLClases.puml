@startuml
title Ejercicio 2 - Patrones de Estructuraci√≥n

interface ComponenteRestaurante {
    +mostrarDetalles(): void
    +agregar(componente: ComponenteRestaurante): void
    +remover(componente: ComponenteRestaurante): void
    +obtenerHijos(): List<ComponenteRestaurante>
}

class RestauranteIndividual {
    -nombre: String
}

class GrupoRestaurantes {
    -restaurantes: List<ComponenteRestaurante>
}

ComponenteRestaurante <|.. RestauranteIndividual
ComponenteRestaurante <|.. GrupoRestaurantes
ComponenteRestaurante "1" o-- "*" ComponenteRestaurante : contiene

interface SistemaReservas {
    +reservarMesa(): void
}

class SistemaReservasExterno {
    +realizarReserva(): void
}

class AdapterReservas implements SistemaReservas {
    -sistemaExterno: SistemaReservasExterno
}

SistemaReservas <|.. AdapterReservas
AdapterReservas o-- SistemaReservasExterno

interface Observador {
    +actualizar(mensaje: String): void
}

interface Sujeto {
    +suscribir(observador: Observador): void
    +desuscribir(observador: Observador): void
    +notificarObservadores(): void
}

class SistemaNotificaciones implements Sujeto {
    -observadores: List<Observador>
    -mensaje: String
}

Observador <|.. Cliente
Sujeto <|.. SistemaNotificaciones
Sujeto "1" o-- "*" Observador : notifica >

@enduml
