@startuml

interface ComponenteRestaurante {
    + mostrarDetalles(): void
    + agregar(componente: ComponenteRestaurante): void
    + remover(componente: ComponenteRestaurante): void
    + obtenerHijos(): List<ComponenteRestaurante>
}

class VistaRestaurante {
    + imprimirDetalles(componenteRestaurante: ComponenteRestaurante): void
}

class RestauranteIndividual {
    - nombre: String
    + RestauranteIndividual(nombre: String)
    + mostrarDetalles(): void
    + agregar(componente: ComponenteRestaurante): void
    + remover(componente: ComponenteRestaurante): void
    + obtenerHijos(): List<ComponenteRestaurante>
}

class GrupoRestaurantes {
    - restaurantes: List<ComponenteRestaurante>
    + mostrarDetalles(): void
    + agregar(componente: ComponenteRestaurante): void
    + remover(componente: ComponenteRestaurante): void
    + obtenerHijos(): List<ComponenteRestaurante>
}

class ControladorRestaurantes {
    - modelo: ComponenteRestaurante
    - vista: VistaRestaurante
    + ControladorRestaurantes(modelo: ComponenteRestaurante, vista: VistaRestaurante)
    + actualizarVista(): void
    + agregarRestaurante(restaurante: ComponenteRestaurante): void
    + removerRestaurante(restaurante: ComponenteRestaurante): void
}

ComponenteRestaurante <|-- RestauranteIndividual
ComponenteRestaurante <|-- GrupoRestaurantes
ControladorRestaurantes --> VistaRestaurante
ControladorRestaurantes --> ComponenteRestaurante

@enduml
